name: ci-release-controllers

on:
  # push:
  #   branches:
  #     - "main"
  #   paths:
  #     - "pkg/**"
  workflow_dispatch:

env:
  PLATFORM: linux/amd64,linux/arm64/v8

jobs:
  check:
    name: Check what controllers were updated
    if: github.repository == 'kubearmor/kubearmor'
    runs-on: self-hosted
    timeout-minutes: 5
    outputs:
      annotation: ${{ steps.filter.outputs.annotation }}
      hostpolicy: ${{ steps.filter.outputs.hostpolicy }}
      policy: ${{ steps.filter.outputs.policy }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          annotation:
            - 'pkg/KubeArmorAnnotation/**'
          hostpolicy:
            - 'pkg/KubeArmorHostPolicy/**'
          policy:
            - 'pkg/KubeArmorPolicy/**'

  annotation-controller-release:
    name: Build & Push annotation controller
    needs: check
    defaults:
      run:
        working-directory: ./pkg/KubeArmorAnnotation
    if: needs.check.outputs.annotation == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: v1.18

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Build & Push annotation controller
        run: PLATFORM=$PLATFORM make docker-buildx TAG=latest

  hostpolicy-controller-release:
    name: Build & Push hostpolicy controller
    needs: check
    defaults:
      run:
        working-directory: ./pkg/KubeArmorHostPolicy
    if: needs.check.outputs.hostpolicy == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: v1.18

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Build & Push hostpolicy controller
        run: PLATFORM=$PLATFORM make docker-buildx TAG=latest

  policy-controller-release:
    name: Build & Push policy controller
    needs: check
    defaults:
      run:
        working-directory: ./pkg/KubeArmorPolicy
    if: needs.check.outputs.policy == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: v1.18

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Build & Push policy controller
        run: PLATFORM=$PLATFORM make docker-buildx TAG=latest
